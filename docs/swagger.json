{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the LegisKuy (Pemilu) application.",
        "title": "LegisKuy API",
        "contact": {
            "name": "Rozhak",
            "url": "https://github.com/RozhakXD"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/candidates": {
            "get": {
                "description": "Get all candidates with optional filtering and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Get all candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter candidates by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter candidates by party",
                        "name": "party",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field (name, party, vote_count)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc, desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of candidates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new candidate with the provided name and party",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Create a new candidate",
                "parameters": [
                    {
                        "description": "Candidate Data",
                        "name": "candidate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_candidate.CreateCandidateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Candidate created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - cannot parse JSON or missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/candidates/{id}": {
            "get": {
                "description": "Get a specific candidate by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Get candidate by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Candidate details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid candidate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - candidate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing candidate's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Update candidate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated candidate data",
                        "name": "candidate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_candidate.UpdateCandidateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated candidate details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid candidate ID or cannot parse JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - candidate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a candidate by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Delete candidate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Candidate deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid candidate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - candidate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/election/results": {
            "get": {
                "description": "Get election results with optional filtering for qualified candidates only",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Get election results",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter only qualified candidates (default: false)",
                        "name": "qualified",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Election results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/election/threshold": {
            "post": {
                "description": "Set the minimum vote threshold for candidates to be qualified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Set election threshold",
                "parameters": [
                    {
                        "description": "Threshold Data",
                        "name": "threshold",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_election.SetThresholdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Threshold set successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - cannot parse JSON or invalid threshold value",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/election/time": {
            "post": {
                "description": "Set the start and end time for the election",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Set election time",
                "parameters": [
                    {
                        "description": "Election Time Data",
                        "name": "time",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_election.SetTimeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Election time set successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - cannot parse JSON or invalid time format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login a user and get a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful with JWT token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - cannot parse JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user account with username, password, name, and role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - validation errors or username already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/vote": {
            "post": {
                "description": "Cast a vote for a candidate in the election",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Cast a vote",
                "parameters": [
                    {
                        "description": "Vote Data",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_election.CastVoteInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote cast successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - cannot parse JSON or missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - election is not currently active",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - voter or candidate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - voter has already voted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/voters": {
            "get": {
                "description": "Get all voters with optional name filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voter"
                ],
                "summary": "Get all voters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter voters by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of voters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new voter with the provided name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voter"
                ],
                "summary": "Create a new voter",
                "parameters": [
                    {
                        "description": "Voter Data",
                        "name": "voter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_voter.CreateVoterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Voter created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - cannot parse JSON or name is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - voter name already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/voters/{id}": {
            "get": {
                "description": "Get a specific voter by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voter"
                ],
                "summary": "Get voter by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Voter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voter details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid voter ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - voter not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing voter's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voter"
                ],
                "summary": "Update voter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Voter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated voter data",
                        "name": "voter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_voter.UpdateVoterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated voter details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid voter ID or cannot parse JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - voter not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - voter name already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a voter by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voter"
                ],
                "summary": "Delete voter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Voter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voter deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid voter ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - voter not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_auth.LoginInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_auth.RegisterInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_candidate.CreateCandidateInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "party": {
                    "type": "string"
                }
            }
        },
        "internal_candidate.UpdateCandidateInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "party": {
                    "type": "string"
                }
            }
        },
        "internal_election.CastVoteInput": {
            "type": "object",
            "properties": {
                "candidate_id": {
                    "type": "integer"
                },
                "voter_id": {
                    "type": "integer"
                }
            }
        },
        "internal_election.SetThresholdInput": {
            "type": "object",
            "properties": {
                "threshold": {
                    "type": "integer"
                }
            }
        },
        "internal_election.SetTimeInput": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "internal_voter.CreateVoterInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "internal_voter.UpdateVoterInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}